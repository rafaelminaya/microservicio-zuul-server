spring.application.name=servicio-zuul-server
# El puerto 8090 es el puerto por defecto mas usado para todo API Gateway
server.port=8090
# registramos este proyecto como cliente de Eureka
eureka.client.serviceUrl.defaultZone=http://localhost:8761/eureka/
# Configuracion de las rutas dinamicas de cada microservicio
# Cada ruta debe coincidir con el nombre del servicio(spring.application.name) de cada microservicio
# La estructura debe ser: "zuul.routes.[NOMBRE_CUALQUIERA].service-id"=[NOMBRE_MICROSERVICIO]
zuul.routes.productos.service-id=servicio-productos
# Configuración y asignacion de la ruta hacia el microservicio "servicio-productos".
# /api/productos : Ruta para aceder al microservicio "servicio-productos".
# "/** : Expresion regular para indicar que lo siguiente a escribir, por ejemplo en un postman, son las rutas propias del microservicio.
zuul.routes.productos.path=/api/productos/**
# Realizamos la misma configuracion anterior para el microservicio de items.
zuul.routes.items.service-id=servicio-items
zuul.routes.items.path=/api/items/**
# Configuración y asignacion de las rutas hacia el microservicio "servicio-productos".
zuul.routes.usuarios.service-id=servicio-usuarios
zuul.routes.usuarios.path=/api/usuarios/**
# Configuracion de hystrix, para cambiar el timeout(tiempo de espera) máximo a 20 segundos. (1 Segundo por defecto)
# Ya que Hystrix envuelve a Ribbon, el tiempo de Hystrix debe ser mayor que la suma de los timeouts de Ribbon (3000 + 10000)
#hystrix.command.default.execution.isolation.thread.timeoutInMilliseconds:20000
# Configuracón del timeout(tiempo de espera) para Ribbon que está envuelto por Hystrix
#ribbon.ConnectTimeout:3000
#ribbon.ReadTimeout:10000